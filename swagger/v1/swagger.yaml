---
swagger: '2.0'
info:
  title: API V1
  version: v1
paths:
  "/api/v1/doctors":
    get:
      summary: list doctors
      responses:
        '200':
          description: successful
    post:
      summary: create doctor
      parameters:
      - in: header
        type: string
        name: Authorization
        required: true
        description: Client token
      - name: doctor
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            specialization:
              type: string
            picture:
              type: string
          required:
          - name
          - specialization
          - picture
      consumes:
      - application/json
      security:
      - Authorization: {}
      responses:
        '200':
          description: successful
  "/api/v1/doctors/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show doctor
      responses:
        '200':
          description: successful
    patch:
      summary: update doctor
      parameters:
      - in: header
        type: string
        name: Authorization
        required: true
        description: Client token
      - name: doctor
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            specialization:
              type: string
            picture:
              type: string
          required:
          - name
          - specialization
          - picture
      security:
      - Authorization: {}
      responses:
        '200':
          description: successful
    put:
      summary: update doctor
      parameters:
      - in: header
        type: string
        name: Authorization
        required: true
        description: Client token
      - name: doctor
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            specialization:
              type: string
            picture:
              type: string
          required:
          - name
          - specialization
          - picture
      security:
      - Authorization: {}
      responses:
        '200':
          description: successful
    delete:
      summary: delete doctor
      parameters:
      - in: header
        type: string
        name: Authorization
        required: true
        description: Client token
      security:
      - Authorization: {}
      responses:
        '200':
          description: successful
  "/api/v1/users":
    get:
      summary: list users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
          required:
          - name
          - email
          - password
          - password_confirmation
      responses:
        '200':
          description: successful
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show user
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
          required:
          - name
          - email
          - password
          - password_confirmation
      responses:
        '200':
          description: successful
    put:
      summary: update user
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
          required:
          - name
          - email
          - password
          - password_confirmation
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      responses:
        '200':
          description: successful
  "/api/v1/auth/signup":
    post:
      summary: create user
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
          required:
          - name
          - email
          - password
          - password_confirmation
      responses:
        '200':
          description: successful
  "/auth/login":
    post:
      summary: login user
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
          required:
          - email
          - password
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
